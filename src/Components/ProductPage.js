import { useState, useEffect } from 'react';
import { collection, query, orderBy, onSnapshot } from "firebase/firestore";
import { db, auth } from '../Config/firebase';
import Product from '../Product/Product';
import AddProduct from '../Product/AddProduct';
import { Document, Page, Text, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';

// Generate PDF report for products
const generateReport = (tasks) => (
    <Document>
        <Page style={styles.page}>
            <Text style={styles.title}>Products & Equipments Report</Text>
            {tasks.map((task) => (
                <Text style={styles.section} key={task.id}>
                    <Text style={styles.label}>Title: </Text>
                    <Text>{task.data.title}</Text>{'\n'}
                    <Text style={styles.label}>Price: </Text>
                    <Text>{task.data.price}</Text>{'\n'}
                    <Text style={styles.label}>Description: </Text>
                    <Text>{task.data.description}</Text>{'\n'}
                    <Text style={styles.label}>Specification: </Text>
                    <Text>{task.data.specification}</Text>{'\n'}
                </Text>
            ))}
            <Text style={styles.footer}>
                Generated by SK Metal Shop Product Management System
            </Text>
        </Page>
    </Document>
);

const styles = StyleSheet.create({
    page: {
        padding: 30,
        fontSize: 12,
    },
    title: {
        fontSize: 20,
        marginBottom: 10,
        textAlign: 'center',
        fontWeight: 'bold',
        color: '#1b3d81',
    },
    section: {
        marginBottom: 10,
        padding: 10,
        border: '1px solid #ddd',
        borderRadius: 5,
        backgroundColor: '#f5f5dc', // Cream background color for the data container
    },
    label: {
        fontWeight: 'bold',
        color: '#b5a642',
    },
    footer: {
        textAlign: 'center',
        marginTop: 20,
        fontSize: 10,
        color: '#1b3d81',
    },
});

function ProductPage() {
    const [openAddModal, setOpenAddModal] = useState(false);
    const [products, setProducts] = useState([]);
    const [user, setUser] = useState(null);

    // Track authentication state
    useEffect(() => {
        const unsubscribe = auth.onAuthStateChanged((user) => {
            console.log('Current user:', user);
            setUser(user);
        });
        return () => unsubscribe();
    }, []);

    // Fetch products from Firestore
    useEffect(() => {
        const q = query(collection(db, 'products'), orderBy('created', 'desc'));
        const unsubscribe = onSnapshot(q, (querySnapshot) => {
            const products = querySnapshot.docs.map(doc => ({
                id: doc.id,
                data: doc.data()
            }));
            setProducts(products);
        });
        return () => unsubscribe();
    }, []);

    return (
        <>
            <div className='w-full h-full py-[6rem] px-5 flex flex-col bg-light-yellow'>
                <header className='text-center text-[2rem] font-xl font-open uppercase p-5 text-black'>
                    <h2>Products & Equipments</h2>
                </header>

                {/* Add Product Button at the Top */}
                <div className='flex justify-center mb-5'>
                    {user && user.email === 'skmetal123@gmail.com' && (
                        <button
                            className='btn btn-width bg-white text-dark-blue px-4 py-2 rounded hover:bg-blue-700 shadow-lg'
                            onClick={() => setOpenAddModal(true)}
                        >
                            Add Products & Equipments +
                        </button>
                    )}
                </div>

                {/* Products Container */}
                <div className='flex flex-wrap justify-center mb-5'>
                    {products.map((product) => (
                        <Product
                            key={product.id}
                            id={product.id}
                            title={product.data.title}
                            price={product.data.price}
                            imageUrl={product.data.imageUrl}
                            description={product.data.description}
                            specification={product.data.specification}
                            userEmail={user?.email}
                        />
                    ))}
                </div>
            </div>

            {/* PDF Download Link for Report at the Bottom Left */}
            <div className='absolute left-5 bottom-5'>
                {user && user.email === 'skmetal123@gmail.com' && (
                    <PDFDownloadLink
                        document={generateReport(products)} // Pass products to the report generator
                        fileName="Products_Report.pdf"
                        style={{
                            display: 'inline-block',
                            width: '6cm',
                            backgroundColor: 'white',
                            color: '#1b3d81',
                            padding: '0.5rem 0',
                            textAlign: 'center',
                            borderRadius: '0.25rem',
                            textDecoration: 'none',
                            fontWeight: 'bold',
                        }}
                    >
                        {({ loading }) => loading ? 'Generating...' : 'Download Report'}
                    </PDFDownloadLink>
                )}
            </div>

            {/* Add Product Modal */}
            {openAddModal && (
                <AddProduct 
                    open={openAddModal} 
                    onClose={() => setOpenAddModal(false)} 
                />
            )}
        </>
    );
}

export default ProductPage;
